# Change all /s/sirsi to $HOME except if in the she-bang line.
2,$ s:/s/sirsi:${HOME}:g

# Change all instances of /s/sirsi to '~' except if in the she-bang line.
2,$ s:/s/sirsi:~:g
## Note this doesn't work in she-bang lines, or in Perl qq{}

# Change all instances of /s/sirsi to '~' Makefile.
s:/s/sirsi:~:g

# Change she-bang from Symphony-eplapp Perl to Symphony-saas Perl.
1s:#!/s/sirsi:#!/software/EDPL:

# Change all non-she-bang /s/sirsi to $ENV{'HOME'} in Perl scripts. Safe for qq{}
2,$ s:/s/sirsi:$ENV{'HOME'}:g

 ---  bash changes ---
# Add line to source a file after first line.
1a\. ~/.bashrc

# copy line with declaration of variable and hostname, comment it out and change hostname.
s/[A-Z_]*=eplapp.library.ualberta.ca/&\n# &/
s/eplapp.library.ualberta.ca/edpl.sirsidynix.net/

# Added code to read Symphony environment vars relatively to HOME.
/use strict;/achomp($ENV{'HOME'} = `. ~/.bashrc; echo ~`);\nopen(my $IN, "<", "$ENV{'HOME'}/Unicorn/Config/environ") or die "$0: $! \$ENV{'HOME'}/Unicorn/Config/environ\\n";\nwhile(<$IN>)\n{\n    chomp;\n    my ($key, $value) = split(/=/, $_);\n    $ENV{$key} = "$value";\n}

--- good examples below, but not for production ---

# process all the references to /s/sirsi into ${HOME} 
s/\/s\/sirsi/\$\{HOME\}/g

# add a comment before each matching line.
/\/s\/sirsi/i\##-@- line below changed during migration to Saas

# Change all instances of /s/sirsi except if there is a comment anywhere on the line.
/#/!s/\/s\/sirsi/\$\{HOME\}/g

# Change all instances of /s/sirsi except if the line contains this or that and the expression.
/th[is|at]/s/\/s\/sirsi/\$\{HOME\}/g

# The next is not good for Makefiles since it references local $HOME not sirsi's $HOME so suggest '~'
# Change /s/sirsi in comments to /software/EDPL in comments, and in non-comments to ${HOME}.
/#/! s@/s/sirsi@\$\{HOME\}@g
/#/  s@/s/sirsi@/software/EDPL@g


# Copy a line with eplapp.library.ualberta.ca to another line comment it out and change server name.
# First -e copies the line with an Upper case variable assignment and comments out the original.
# The second replaces the hostname on the first instance.
# sed -e 's/[A-Z_]*=eplapp.library.ualberta.ca/&\n# &/' -e 's/eplapp.library.ualberta.ca/edpl.sirsidynix.net/' <Makefile.test
## Looks like
...
PRODUCTION_SERVER=edpl.sirsidynix.net
# PRODUCTION_SERVER=eplapp.library.ualberta.ca
...
# regardless of what the variable name, and works even if the line is commented. the replacement line is also commented out.